{"v":2,"name":"OpenAI Assistants API","folders":[],"requests":[{"v":"5","auth":{"token":"<<OPENAI_API_KEY>>","authType":"none","authActive":true},"body":{"body":"Overall, first create an assistant and enable the File Search function, informing it of its duties (role settings). Next, create a thread, which will automatically record all conversation history. Then, create a message, which is the question itself (related files are also attached at this time). After adding it to the question, you can run it. Finally, use the thread_id to check the results.\n\nhttps://platform.openai.com/docs/api-reference/assistants\n\nhttps://platform.openai.com/docs/api-reference/threads\n\nhttps://platform.openai.com/docs/api-reference/messages\n\nhttps://platform.openai.com/docs/api-reference/runs","contentType":"text/html"},"name":"Step 0 - Summary","method":"CUSTOM","params":[],"headers":[{"key":"OpenAI-Beta","value":"assistants=v2","active":true}],"endpoint":"https://api.openai.com/v1/vector_stores/vs_ka80HDGHQRj6uYc4DUFMB5dj","testScript":"","preRequestScript":"","requestVariables":[]},{"v":"5","auth":{"token":"<<OPENAI_API_KEY>>","authType":"bearer","authActive":true},"body":{"body":[{"key":"file","value":[{}],"active":true,"isFile":true},{"key":"purpose","value":"assistants","active":true,"isFile":false}],"contentType":"multipart/form-data"},"name":"Step 1 - upload file","method":"POST","params":[],"headers":[],"endpoint":"https://api.openai.com/v1/files","testScript":"// 取得file_id\npw.env.set(\"openai_file_id\",  pw.response.body.id);","preRequestScript":"","requestVariables":[]},{"v":"5","auth":{"token":"<<OPENAI_API_KEY>>","authType":"bearer","authActive":true},"body":{"body":"{\n    \"instructions\":\"You are a PCAssistant that generates corresponding CMD commands based on a file provided by the user. The file provided by the user contains all the local data, including the file name, path, and last modified time.\",\n    \"name\":\"PCAssistant\",\n    \"tools\":[{\"type\": \"file_search\"}],\n    \"model\":\"gpt-4o\"\n}","contentType":"application/json"},"name":"Step 2 - Create assistant","method":"POST","params":[],"headers":[{"key":"OpenAI-Beta","value":"assistants=v2","active":true}],"endpoint":"https://api.openai.com/v1/assistants","testScript":"// 取得file_id\npw.env.set(\"openai_assistant_id\",  pw.response.body.id);","preRequestScript":"","requestVariables":[]},{"v":"5","auth":{"token":"<<OPENAI_API_KEY>>","authType":"bearer","authActive":true},"body":{"body":null,"contentType":null},"name":"Step 3 - create New Thread","method":"POST","params":[],"headers":[{"key":"OpenAI-Beta","value":"assistants=v1","active":true}],"endpoint":"https://api.openai.com/v1/threads","testScript":"// 取得file_id\npw.env.set(\"openai_thread_id\",  pw.response.body.id);","preRequestScript":"","requestVariables":[]},{"v":"5","auth":{"token":"<<OPENAI_API_KEY>>","authType":"bearer","authActive":true},"body":{"body":"{\n  \"role\": \"user\",\n  \"content\": \"I will ask question later.\",\n  \"attachments\": [\n    {\n      \"file_id\": \"<<openai_file_id>>\",\n      \"tools\": [\n        {\n          \"type\": \"file_search\"\n        }\n      ]\n    }\n  ]\n}","contentType":"application/json"},"name":"STEP 4 - Create message","method":"POST","params":[],"headers":[{"key":"OpenAI-Beta","value":"assistants=v2","active":true}],"endpoint":"https://api.openai.com/v1/threads/<<openai_thread_id>>/messages","testScript":"","preRequestScript":"","requestVariables":[]},{"v":"5","auth":{"token":"<<OPENAI_API_KEY>>","authType":"bearer","authActive":true},"body":{"body":"{\n    \"assistant_id\": \"<<openai_assistant_id>>\"\n}","contentType":"application/json"},"name":"STEP 5 - Create run","method":"POST","params":[],"headers":[{"key":"OpenAI-Beta","value":"assistants=v2","active":true}],"endpoint":"https://api.openai.com/v1/threads/<<openai_thread_id>>/runs","testScript":"// 取得file_id\npw.env.set(\"openai_run_id\",  pw.response.body.id);","preRequestScript":"","requestVariables":[]},{"v":"5","auth":{"token":"<<OPENAI_API_KEY>>","authType":"bearer","authActive":true},"body":{"body":"{","contentType":null},"name":"STEP 5.5 - Retrieve run","method":"GET","params":[],"headers":[{"key":"OpenAI-Beta","value":"assistants=v2","active":true}],"endpoint":"https://api.openai.com/v1/threads/<<openai_thread_id>>/runs/<<openai_run_id>>","testScript":"","preRequestScript":"","requestVariables":[]},{"v":"5","auth":{"token":"<<OPENAI_API_KEY>>","authType":"bearer","authActive":true},"body":{"body":null,"contentType":null},"name":"STEP 6 - Display the Assistant's Response","method":"GET","params":[],"headers":[{"key":"OpenAI-Beta","value":"assistants=v2","active":true},{"key":"Content-Type","value":"application/json","active":true}],"endpoint":"https://api.openai.com/v1/threads/<<openai_thread_id>>/messages","testScript":"","preRequestScript":"","requestVariables":[]},{"v":"5","auth":{"token":"<<OPENAI_API_KEY>>","authType":"bearer","authActive":true},"body":{"body":null,"contentType":null},"name":"Get Vectors list","method":"GET","params":[],"headers":[{"key":"OpenAI-Beta","value":"assistants=v2","active":true}],"endpoint":"https://api.openai.com/v1/vector_stores","testScript":"","preRequestScript":"","requestVariables":[]},{"v":"5","auth":{"token":"<<OPENAI_API_KEY>>","authType":"bearer","authActive":true},"body":{"body":null,"contentType":null},"name":"Check Vector status","method":"GET","params":[],"headers":[{"key":"OpenAI-Beta","value":"assistants=v2","active":true}],"endpoint":"https://api.openai.com/v1/vector_stores/<<openai_vector_id>>","testScript":"","preRequestScript":"","requestVariables":[]}],"auth":{"authType":"inherit","authActive":true},"headers":[]}